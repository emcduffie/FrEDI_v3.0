% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_fredi.R
\name{run_fredi}
\alias{run_fredi}
\title{Project annual average climate change impacts throughout the 21st century for available sectors}
\usage{
run_fredi(
  inputsList = list(tempInput = NULL, slrInput = NULL, gdpInput = NULL, popInput =
    NULL),
  sectorList = NULL,
  aggLevels = c("national", "modelaverage", "impactyear", "impacttype"),
  pv = FALSE,
  baseYear = 2010,
  rate = 0.03,
  elasticity = NULL,
  silent = TRUE
)
}
\arguments{
\item{inputsList}{A list of named elements named elements (\code{names(inputsList)= c("tempInput", "slrInput", "gdpInput", "popInput")}), each containing dataframes of custom temperature, global mean sea level rise (GMSL), gross domestic product (GDP), and/or population scenarios, respectively, over the period 2010 to 2090. Note: temperature and sea level rise inputs should start in 2000 or earlier.}

\item{sectorList}{A character vector indicating a selection of sectors for which to calculate results (see \code{\link[=get_sectorInfo]{get_sectorInfo()}}). If \code{NULL}, all sectors are included.}

\item{aggLevels}{Levels of aggregation at which to summarize data: one or more of \code{c("national", "modelaverage", "impactyear", "impacttype", "all")}. Defaults to all levels (i.e., \code{aggLevels="all"}). Uses the same aggregation levels as \code{\link[=aggregate_impacts]{aggregate_impacts()}}.}

\item{pv}{A \code{TRUE/FALSE} value indicating Whether to calculate present values for the annual impacts. Defaults to \code{pv=TRUE}. Present values (i.e., discounted impacts) are calculated as \code{discounted_impacts=annual_impacts/(1+rate)^(year-baseYear)}. Set an annual discounting rate and a base year using \code{baseYear} and \code{rate}.}

\item{baseYear}{Base year used for calculating present values of annual impacts (i.e., discounting). Defaults to \code{baseYear=2010}.}

\item{rate}{Annual discount rate used in calculating present values of annual impacts (i.e., discounting). Defaults to \code{rate=0.03} (i.e., 3\% per year).}

\item{silent}{A \code{TRUE/FALSE} value indicating the level of messaging desired by the user (default=\code{TRUE}).}

\item{elasticity=NULL}{A numeric value indicating an elasticity to use for adjusting economic values.}
}
\value{
The output of \code{\link[=run_fredi]{run_fredi()}} is an R data frame object containing annual average impacts, by year (2010-2090), for each sector, adaptation, model (GCM or SLR scenario), and region.
}
\description{
This function allows users to project annual average climate change impacts throughout the 21st century (2010-2090) for available sectors (see \code{\link[=get_sectorInfo]{get_sectorInfo()}}). Users may specify an optional list of custom scenarios. The output is an R data frame object containing annual average impacts, by year, for each sector, adaptation, impact type, model (GCM or SLR scenario), and region.
}
\details{
This function allows users to project annual average climate change impacts throughout the 21st century (2010-2090) for available sectors. \code{\link[=run_fredi]{run_fredi()}} is the main function in the \link{FrEDI} R package, described elsewhere (See \url{https://epa.gov/cira/FrEDI} for more information).

Users can run \code{\link[=run_fredi]{run_fredi()}} for all the sectors (default) or run FrEDI for specific sectors specified as a character vector to the \code{sectorsList} argument (run \code{\link[=get_sectorInfo]{get_sectorInfo()}} to see a list of available sectors).

#' Users can run FrEDI with the default scenario or have the option to specify custom inputs as a list of scenarios. The output of \code{\link[=run_fredi]{run_fredi()}} is an R data frame object containing annual average impacts, by year, for each sector, adaptation, impact type, model (GCM or SLR scenario), and region.

Users can specify an optional list of custom scenarios with \code{inputsList} (for more information on the format of inputs, see \code{\link[=import_inputs]{import_inputs()}}). \code{\link[=run_fredi]{run_fredi()}} uses default scenarios for temperature, population, and GDP when no inputs are specified (i.e., \code{inputsList=NULL}) or for empty elements of the inputs list. If the user does not specify an input scenario for GMSL (i.e., \code{inputsList=list(slrInput=NULL)}, \code{\link[=run_fredi]{run_fredi()}} first converts the CONUS temperature scenario to global temperatures and then converts the global temperatures to a global mean sea level rise (GMSL) height in centimeters. For more information on the conversion of CONUS temperatures to global temperatures, see \code{\link[=convertTemps]{convertTemps()}}. For more information on the conversion of global temperatures to GMSL, see \code{\link[=temps2slr]{temps2slr()}}.

Values for input scenarios must be within reasonable ranges. If a user inputs a custom scenario with values outside the allowable ranges, \code{\link[=run_fredi]{run_fredi()}} will not run the scenarios and will instead stop and return an error message. For more information, see \code{\link[=import_inputs]{import_inputs()}}. Temperature and GMSL inputs must begin in 2000 or earlier. Values for population and GDP scenarios can start in 2010 or earlier.
\itemize{
\item The input temperature scenario (passed to \code{\link[=run_fredi]{run_fredi()}} via the \code{inputsList} argument) requires temperatures for the contiguous U.S. (CONUS) in degrees Celsius relative to 1995 (degrees of warming relative to the baseline). Temperature values must be greater than or equal to zero and less than or equal to 10 degrees Celsius. Users can convert global temperatures to CONUS temperatures using \link{convertTemps(from="global")} or by specifying \link{import_inputs(temptype="global")} when importing a temperature scenario from a CSV file.
\item Values for the sea level rise (SLR) scenario are for global mean sea level rise (GMSL) must be in centimeters (cm) and values must be greater than or equal to zero and less than or equal to 250 cm.
\item Population and gross domestic product (GDP) values must be greater than or equal to zero.
}

If \code{inputsList=NULL}, \code{\link[=run_fredi]{run_fredi()}} uses defaults for all scenarios. Otherwise, \code{\link[=run_fredi]{run_fredi()}} looks for a list object passed to the argument \code{inputsList}. Within that list, \code{\link[=run_fredi]{run_fredi()}} looks for list elements \code{tempInput}, \code{slrInput}, \code{gdpInput}, and \code{popInput} containing dataframes with custom scenarios for temperature, GMSL, GDP, and regional population, respectively. \code{\link[=run_fredi]{run_fredi()}} will default back to the default scenarios for any list elements that are \code{NULL} or missing. In other words, running \code{run_fredi(inputsList=list())} returns the same outputs as running \code{\link[=run_fredi]{run_fredi()}}. For help importing custom scenarios from CSV files, refer to the pre-processing function \code{\link[=import_inputs]{import_inputs()}}.

\code{\link[=run_fredi]{run_fredi()}} linearly interpolates missing annual values for all input scenarios using non-missing values (requires at least two non-missing values). Temperatures are interpolated using 1995 as the baseline year (i.e., the central year of the 1986-2005 baseline). In other words, the temperature (in degrees Celsius) is set to zero for the year 1995 and GMSL is set to zero for the year 2000. The interpolated temperature and GMSL scenarios are combined into a column called \code{driverValue}, along with additional columns for year, the driver unit (column \code{"driverUnit"}, with \code{driverUnit="degrees Celsius"} and \code{driverUnit="cm"} for temperature- and SLR-driven sectors, respectively), and the associated model type (column \code{"model_type"}, with \code{model_type="GCM"} and \code{model_type="SLR"} for temperature- and SLR-driven sectors, respectively).

The population scenario must provide annual regional values for population, with national totals calculated from regional values. FrEDI uses the national population scenario and the GDP scenario to calculate GDP per capita. Values for regional population, national population, national GDP (in 2015$), and national per capita GDP (in 2015$/capita) are provided in the results dataframe in columns \code{"reg_pop"}, \code{"national_pop"}, \code{"gdp_usd"}, and \code{"gdp_percap"}, respectively.

Annual impacts for each sector, adaptation, impact type, and impact year combination included in the model are calculated by multiplying scaled climate impacts by a physical scalar and economic scalars and multipliers.

\code{\link[=run_fredi]{run_fredi()}} aggregates or summarizes results to levels of aggregation specified by the user (passed to \code{aggLevels}) using the post-processing helper function \code{\link[=aggregate_impacts]{aggregate_impacts()}}. Users can specify a single aggregation level or multiple aggregation levels by passing a single character string or character vector to \code{aggLevels}. Options for aggregation include calculating national totals (\code{aggLevels="national"}), averaging across model types and models (\code{aggLevels="modelaverage"}), summing over all impact types (\code{aggLevels="impacttype"}), and interpolate between impact year estimates (\code{aggLevels="impactYear"}). Users can specify all aggregation levels at once by specifying \code{aggLevels="all"} (default) or no aggregation levels (\code{aggLevels="none"}).

For each of the \code{aggLevels}, \code{\link[=run_fredi]{run_fredi()}} performs the following summarization (using \code{\link[=aggregate_impacts]{aggregate_impacts()}}):

\tabular{ll}{
\strong{Aggregation Level} \tab \strong{Description} \cr
\code{national} \tab Annual values are summed across all regions present in the data. I.e., data is grouped by columns \code{"sector"}, \code{"adaptation"}, \code{"impactType"},  \code{"impactYear"}, \code{"model_type"}, \code{"model"}, and \code{"year"}) and summed across regions. Years which have missing column data for all regions return as \code{NA}. The rows of the dataframe of national values (with column \code{region="National Total"}) are then added as rows to the results. \cr
\code{modelaverage} \tab For temperature-driven sectors, annual results are averaged across all GCM models present in the data. I.e., data is grouped by columns \code{"sector"}, \code{"adaptation"}, \code{"impactType"}, \code{"impactYear"}, \code{"model_type"}, \code{"region"}, and \code{"year"} and averaged across models (SLR impacts are estimated as an interpolation between SLR scenarios). Averages exclude missing values. Years which have missing column data for all models return as \code{NA}. The rows of model averages (with column \code{model="Average"} are then added as rows to the results dataframe. \cr
\code{impactType} \tab Annual results are summed across all impact types by sector present in the data. I.e., data is grouped by columns \code{"sector"}, \code{"adaptation"}, \code{"impactType"}, \code{"impactYear"},\code{"model_type"}, \code{"model"}, \code{"region"}, and \code{"year"} and summed across impact types. Mutates column \code{impactType="all"} for all values. Years which have missing column data for all impact types return as \code{NA}. If results are aggregated across impact types, information about physical impacts (columns \code{"physicalmeasure"} and \code{"physical_impacts"}) are dropped.\cr
\code{impactYear} \tab Annual results for sectors with only one impact year estimate (i.e., \code{impactYear == "N/A"}) are separated from those with multiple impact year estimates. For sectors with multiple impact years (i.e. 2010 and 2090 socioeconomic runs), annual results are interpolated between impact year estimates for applicable sectors  i.e., data is grouped by columns \verb{"sector", "adaptation", "impactType, "model_type", "model", "region", "year"} and interpolated across years with the 2010 run assigned to year 2010 and the 2090 run assigned to year 2090. The interpolated values are bound back to the results for sectors with a single impact year estimate, and column \code{impactYear} set to \code{impactYear="Interpolation"} for all values. \cr
}

Users can choose to calculate present values of annual impacts (i.e., discounted impacts), by setting \code{pv=TRUE} (defauts to \code{pv=FALSE}). If \code{pv=TRUE}, discounted impacts are calculated using a base year and annual discount rate as \code{discounted_impacts=annual_impacts/(1+rate)^(year-baseYear)}. Set base year and annual discount rate using \code{baseYear} (defaults to \code{baseYear=2010}) and \code{rate} (defaults to 3\% i.e., \code{rate=0.03}), respectively.
}
\examples{
### Run function with defaults (same as `defaultResults` dataset)
df_defaults <- run_fredi()

### Path to example scenarios
scenariosPath <- system.file(package="FrEDI") \%>\% file.path("extdata","scenarios")
### View example scenario names
scenariosPath \%>\% list.files
### Temperature Scenario File Name
tempInputFile <- scenariosPath \%>\% file.path("GCAM_scenario.csv")
### SLR Scenario File Name
slrInputFile  <- scenariosPath \%>\% file.path("slr_from_GCAM.csv")
### Population Scenario File Name
popInputFile  <- scenariosPath \%>\% file.path("pop_scenario.csv")
### Import inputs
example_inputsList <- import_inputs(
  tempfile = tempInputFile,
  slrfile  = slrInputFile,
  popfile  = popInputFile
)

### Run custom temperature scenario and output impacts without aggregation and with present values (default base year and discount rate)
df_tempExOut <- run_fredi(inputsList= tempBin_inputs, aggLevels="none", pv=TRUE, silent=TRUE)

}
\references{
Environmental Protection Agency (EPA). 2021. Technical Documentation on The Framework for Evaluating Damages and Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available at \url{https://epa.gov/cira/FrEDI/}.
}
